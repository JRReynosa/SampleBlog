@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

@{
    Layout = null;
}

@model IEnumerable<Portfolio.ViewModels.BlogViewModel>

@for (int i = 0; i < ViewBag.BlogCount; i++)
{
    <div class="border-bottom">
        <p class="d-inline display-4">
            @Html.DisplayFor(item => Model.ElementAt(i).Title)
        </p>

        <p class="d-inline text-secondary">
            @Html.DisplayFor(item => Model.ElementAt(i).DateSubmitted)
        </p>

        @if (SignInManager.IsSignedIn(User))
        {
            <a class="d-inline text-info" asp-action="Edit" asp-route-id="@Model.ElementAt(i).BlogID">Edit</a>
            <a class="d-inline text-danger" asp-action="Delete" asp-route-id="@Model.ElementAt(i).BlogID">Delete</a>
        }

        <p class="text-info">
            Tags: @Html.DisplayFor(item => Model.ElementAt(i).Tags)
        </p>

        <!-- Create the editor container -->
        @{
            var num = i + ViewBag.Count;
            string str = "editor" + num;
        }
        <div id="@str">
        </div>
    </div>
}

<script class="loadScript">
    $(document).ready(function () {
    // Initialize Quill editors
    var Delta = Quill.import('delta'); // Import delta
    @for (var i = 0; i < ViewBag.BlogCount; i++)
    {
        var num = i + ViewBag.Count;
        <text>
        var str = '#editor' + @num;
        var quill = new Quill(str, {
            readOnly: true,
            theme: 'bubble'
        });

        var json = @Html.Raw(Json.Serialize(Model.ElementAt(i).Content)); // Bring in the JSON from Model.Content
        var delta = new Delta(JSON.parse(json)); // Parse JSON and create new Delta from it
        var a = delta.retain(0);
        quill.setContents(a); // Set the contents within the editor based on Delta
        </text>
    }

    if (@Model.Count() < 3) {
        $('#loadMore').hide();
    }
});
</script>