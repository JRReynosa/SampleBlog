@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

@model IEnumerable<Portfolio.ViewModels.BlogViewModel>

@{
    ViewData["Title"] = "Blog";
}

<!-- Include the highlight.js library/CSS & Quill library/CSS-->
<link rel="stylesheet"
      href="//cdn.jsdelivr.net/gh/highlightjs/cdn-release@10.0.0/build/styles/monokai-sublime.min.css">
<script src="//cdn.jsdelivr.net/gh/highlightjs/cdn-release@10.0.0/build/highlight.min.js"></script>
<link href="//cdn.quilljs.com/1.3.6/quill.bubble.css" rel="stylesheet">
<script src="//cdn.quilljs.com/1.3.6/quill.js"></script>

<script src="https://kit.fontawesome.com/df8cbb7f66.js" crossorigin="anonymous"></script>

<h1>Blog</h1>

@{
    if (SignInManager.IsSignedIn(User))
    {
        <a class="text-info h4" asp-controller="Blogs" asp-action="Create">New Post</a>
    }
}

@for (var i = 0; i < Model.Count(); i++)
{
    <div class="border-bottom">
        <p class="d-inline display-4">
            @Html.DisplayFor(item => Model.ElementAt(i).Title)
        </p>

        <p class="d-inline text-secondary">
            @Html.DisplayFor(item => Model.ElementAt(i).DateSubmitted)
        </p>

        @if (SignInManager.IsSignedIn(User))
        {
            <a class="d-inline text-info" asp-action="Edit" asp-route-id="@Model.ElementAt(i).BlogId">Edit</a>
            <a class="d-inline text-danger" asp-action="Delete" asp-route-id="@Model.ElementAt(i).BlogId">Delete</a>
        }

        <p class="text-secondary">
            Tags: @Html.DisplayFor(item => Model.ElementAt(i).Tags)
        </p>

        <!-- Create the editor container -->
        @{
            string str = "editor" + i;
        }
        <div id="@str">
        </div>
        <a class="h2 text-info text-decoration-none d-flex justify-content-center" asp-action="Details" asp-route-id="@Model.ElementAt(i).BlogId">Read More</a>
    </div>
}

<br/>
<button type="button" class="btn btn-outline-dark btn-block" id="loadMore" onclick="LoadMore()">Load More</button>

<script>
    $(document).ready(function () {
        // Initialize Quill editors
        var Delta = Quill.import('delta'); // Import delta
        @for (var i = 0; i < Model.Count(); i++)
        {
            <text>
            var str = '#editor' + @i;
            var quill = new Quill(str, {
                readOnly: true,
                theme: 'bubble'
            });

            var json = @Html.Raw(Json.Serialize(Model.ElementAt(i).Content)); // Bring in the JSON from Model.Content
            var delta = new Delta(JSON.parse(json)); // Parse JSON and create new Delta from it
            var a = delta.slice(0,100).insert('...');
            quill.setContents(a); // Set the contents within the editor based on Delta
            </text>
        }
    });

    // Load More
    var loadCount = 1;
    function LoadMore() {
        $.ajax({
            url: "/Blogs/LoadMoreBlog/",
            data: { count: loadCount * 3 },
            cache: false,
            type: "GET",
            success: function (data) {
                if (data != null) {
                    console.log(data);
                    $(data).insertBefore("#loadMore").hide().fadeIn(2000);
                    $('.loadScript').css({ "display": "none" });

                }

            },
            error: function (xhr, status, error) {
                console.log(xhr.responseText);
                alert("message : \n" +
                    "An error occurred, for more info check the js console" +
                    "\n status : \n" + status + " \n error : \n" + error);
            }
        });
        loadCount++;
    }
</script>
