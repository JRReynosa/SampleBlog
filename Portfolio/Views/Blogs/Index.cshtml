@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

@model IEnumerable<Portfolio.ViewModels.BlogViewModel>

@{
    ViewData["Title"] = "Index";
}

<h1>Blog</h1>

@{
    if (SignInManager.IsSignedIn(User))
    {
        <a class="text-info h4" asp-controller="Blogs" asp-action="Create">New Post</a>
    }
}

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.DateSubmitted)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Tags)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Content)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.DateSubmitted)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Tags)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Content)
                </td>
                <td>
                    <a class="text-dark" asp-action="Details" asp-route-id="@item.BlogID">Blog Details</a>

                    @if (SignInManager.IsSignedIn(User))
                    {
                        <a class="text-info" asp-action="Edit" asp-route-id="@item.BlogID">Edit</a>
                        <a class="text-danger" asp-action="Delete" asp-route-id="@item.BlogID">Delete</a>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>
